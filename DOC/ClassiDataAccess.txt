Charts.Data

Le classi:
1)Country [idcountry,name]
2)Languege [idlanguage,name,color]
3)Tweet [idtweet,country,creationdate, List<string> language_fk]
4)GraphData[idstate, statename, languagename, languagecolor, month, n_tweet] estende country, language  ========ES: ('IT', 'Italy', 'C#', 'red', 05, 245)

Queste classi descrivono le tabelle del database.

La classe DataAccess implementa dei metodi :


-GetCountries ritorna List<Country>
*'IT'
*'Italia'


-GetTweets ritorna List<Tweet> 
*1561248765468
*IT
*18-05-2015
*{3, 5} (lista di linguaggi)

-GetLanguages ritorna List<Language>
*2
*'Java'
*'#12561a6'

-DataAnalysis  conta i tweet per linguaggio in base al mese e allo stato, carica i dati nella tabella country_language
*INSERT INTO country_language(month, n_tweet, country_fk, language_fk) VALUES('5', 242, 'IT', '2');

-SaveDataAnalysis ottiene i dati della tabella country_language(sommando i tweet totali per ogni paese e prendendo solo il linguaggio più usato per ogni paese), li salva
 su file in formato JSON(MapData.txt), l'oggetto deve essere strutturato in questo modo:
'[
{ "id":"CH" , "title":"Switzerland", "customData":"c# (220 tweet)" , "color":"red", "groupId" : "c#"},
{ "id":"AT" , "title":"Austria" ..}
]' 

Questo metodo dovrà salvare su un altro file, anche il mese e il numero di tweet per ogni linguaggio, in ciascun paese. Il file (GraphData.txt) pertanto, conterrà lo storico
che verrà aggiornato ogni mese.
'[
{ "id":"CH" , "title":"Switzerland", "customData":"220" , "color":"red", "groupId" : "c#"},
{ "id":"AT" , "title":"Austria" ..}
]' 


-GetGraphData ritorna i dati 
